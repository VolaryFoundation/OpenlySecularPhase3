{
  "name": "tower-emitter",
  "description": "Event emitter",
  "version": "0.1.1",
  "dependencies": {
    "indexof": "*"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/tower/emitter.git"
  },
  "readme": "# Tower Emitter\n\nEvent emitter component (started from component/emitter).\n\n## Installation\n\nnode.js:\n\n```bash\n$ npm install tower-emitter\n```\n\nbrowser:\n\n```bash\n$ component install tower/emitter\n```\n\n## API\n\n### Emitter(obj)\n\n  The `Emitter` may also be used as a mixin. For example\n  a \"plain\" object may become an emitter, or you may\n  extend an existing prototype.\n\n  As an `Emitter` instance:\n\n```js\nvar Emitter = require('emitter');\nvar emitter = new Emitter;\nemitter.emit('something');\n```\n\n  As a mixin:\n\n```js\nvar Emitter = require('emitter');\nvar user = { name: 'tobi' };\nEmitter(user);\n\nuser.emit('im a user');\n```\n\n  As a prototype mixin:\n\n```js\nvar Emitter = require('emitter');\nEmitter(User.prototype);\n```\n  \n### Emitter#on(event, fn)\n\n  Register an `event` handler `fn`.\n\n### Emitter#once(event, fn)\n\n  Register a single-shot `event` handler `fn`,\n  removed immediately after it is invoked the\n  first time.\n\n### Emitter#off(event, fn)\n\n  Remove `event` handler `fn`, or pass only the `event`\n  name to remove all handlers for `event`.\n\n### Emitter#emit(event, ...)\n\n  Emit an `event` with variable option args.\n\n### Emitter#listeners(event)\n\n  Return an array of callbacks, or an empty array.\n\n### Emitter#hasListeners(event)\n\n  Check if this emitter has `event` handlers.\n\n## Notes\n\n- https://github.com/component/clone/blob/master/index.js\n\n## Testing\n\nInstall testem:\n\n```bash\n$ npm install -g testem\n```\n\nRun tests:\n\n```bash\n$ testem\n```\n\nThen, open all the browsers you want to test by going to the outputted url defaulted to [http://localhost:7357](http://localhost:7357)\n\nTests will run on any open browser linked to the stated url and your current Node environment.\n\n## Contributing\n\nBefore you send a pull request, make sure your code meets the style guidelines at [https://github.com/tower/style-guide](https://github.com/tower/style-guide) and all tests pass.\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tower/emitter/issues"
  },
  "homepage": "https://github.com/tower/emitter",
  "_id": "tower-emitter@0.1.1",
  "dist": {
    "shasum": "54630144ab7683a2002b7130f4c598f2d930c0a4"
  },
  "_from": "tower-emitter@~0.1.0",
  "_resolved": "https://registry.npmjs.org/tower-emitter/-/tower-emitter-0.1.01.tgz"
}
