{
  "name": "routie-client",
  "version": "0.1.0",
  "private": true,
  "main": "./lib/routie.js",
  "devDependencies": {
    "mocha": "~1.9.0",
    "grunt": "~0.4.1",
    "grunt-reloadr": "~0.1.2",
    "grunt-mocha": "~0.3.0",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-uglify": "~0.2.0",
    "grunt-contrib-jshint": "~0.4.3",
    "grunt-contrib-connect": "~0.3.0",
    "grunt-contrib-watch": "~0.3.1",
    "grunt-plato": "~0.2.0"
  },
  "readme": "#Routie\n\nRoutie is a javascript hash routing library.  It is designed for scenarios when push state is not an option (IE8 support, static/Github pages, Phonegap, simple sites, etc). It is very tiny (800 bytes gzipped), and should be able to handle all your routing needs.\n\n##Download\n\n- [Development](https://raw.github.com/jgallen23/routie/master/dist/routie.js)\n- [Production](https://raw.github.com/jgallen23/routie/master/dist/routie.min.js)\n- [Source](https://github.com/jgallen23/routie)\n\n##Basic Usage\n\nThere are three ways to call routie:\n\nHere is the most basic way:\n\n```js\nroutie('users', function() {\n\t//this gets called when hash == #users\n});\n```\n\nIf you want to define multiple routes you can pass in an object like this:\n\n```js\nroutie({\n\t'users': function() {\n\n\t},\n\t'about': function() {\n\t}\n});\n```\n\nIf you want to trigger a route manually, you can call routie like this:\n\n```js\nroutie('users/bob');  //window.location.hash will be #users/bob\n```\n\n##Regex Routes\n\nRoutie also supports regex style routes, so you can do advanced routing like this:\n\n```js\nroutie('users/:name', function(name) {\n\t//name == 'bob';\n});\nroutie('users/bob');\n```\n\n###Optional Params:\n```js\nroutie('users/:name?', function(name) {\n\t//name == undefined\n\t//then\n\t//name == bob\n});\nroutie('users/');\nroutie('users/bob');\n```\n\n###Wildcard:\n```js\nroutie('users/*', function() {\n});\nroutie('users/12312312');\n```\n\n###Catch All:\n```js\nroutie('*', function() {\n});\nroutie('anything');\n```\n\n##Named Routes\n\nNamed routes make it easy to build urls for use in your templates.  Instead of re-creating the url, you can just name your url when you define it and then perform a lookup.  The name of the route is optional.  The syntax is \"\\[name\\] \\[route\\]\".\n\n```js\nroutie('user users/:name', function() {});\n```\n\nthen in your template code, you can do:\n\n```js\nroutie.lookup('user', { name: 'bob'}) // == users/bob\n```\n\n\n##Dependencies\n\nNone\n\n##Supports\n\nAny modern browser and IE8+\n\n##Tests\n\nRun `make install`, then `make test`, then go to http://localhost:8000/test\n\n",
  "readmeFilename": "README.md",
  "description": "Routie is a javascript hash routing library.  It is designed for scenarios when push state is not an option (IE8 support, static/Github pages, Phonegap, simple sites, etc). It is very tiny (800 bytes gzipped), and should be able to handle all your routing needs.",
  "_id": "routie-client@0.1.0",
  "dist": {
    "shasum": "dffa39bcc827c92be97946d5b6ec52744a2c6175"
  },
  "_from": "../routie/"
}
