{
  "name": "mithrilify",
  "description": "Browserify transform for precompiling Mithril views",
  "version": "0.0.1",
  "homepage": "https://github.com/sectore/mithrilify",
  "bugs": {
    "url": "https://github.com/sectore/mithrilify/issues"
  },
  "license": "MIT",
  "main": "lib/mithrilify.js",
  "author": {
    "name": "Jens Krause",
    "email": "info@websector.de",
    "url": "http://websector.de"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sectore/mithrilify"
  },
  "keywords": [],
  "dependencies": {
    "msx": "^0.1.3",
    "through": "^2.3.4"
  },
  "devDependencies": {
    "browserify": "^4.2.0",
    "debug": "^1.0.2",
    "gulp": "^3.6.2",
    "gulp-bump": "^0.1.8",
    "gulp-jscs": "^0.4.2",
    "gulp-jshint": "^1.5.5",
    "gulp-load-plugins": "^0.5.1",
    "gulp-mocha": "^0.4.1",
    "gulp-plumber": "^0.6.2",
    "gulp-util": "2.2.16",
    "jshint-stylish": "^0.2.0",
    "should": "^4.0.4"
  },
  "scripts": {
    "test": "gulp test"
  },
  "readme": "# mithrilify \n\n[Browserify](http://browserify.org/) [transform](https://github.com/substack/node-browserify#btransformopts-tr) \nfor converting [Mithril](http://lhorie.github.io/mithril/) view templates \nusing [MSX](https://github.com/insin/msx)\n\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-url]][daviddm-image]\n\n\n## Install\n\n```bash\n$ npm install --save-dev mithrilify\n```\n\n\n## Usage\n  \n### Example of a Mithril view template. \n\nIt can be defined within a `*.js` or `*.msx` file and \nshould include `/** @jsx m */` at the top. \n\n\n```javascript\n/** @jsx m */\n'use strict';\n\nvar View = function (ctrl) {\n  return <div>\n      hello\n    </div>;\n};\n\nmodule.exports = View;\n```\n\n### Command line:\n\n```bash\n$ browserify -t mithrilify ./view.js > ./bundle.js\n```\n\n### [Gulp](http://gulpjs.com/) and [gulp-browserify](https://github.com/deepak1556/gulp-browserify)\n\n```javascript\nvar gulp = require('gulp');\n  browserify = require('gulp-browserify'),\n  rename = require('gulp-rename');\n\ngulp.task('bundle', function() {\n  gulp.src('app/scripts/view.js')\n    .pipe(browserify({\n      transform: ['mithrilify']\n    }))\n    .pipe(rename('bundle.js'))\n    .pipe(gulp.dest('build/'))\n});\n```\n\n\n### [Grunt](http://gruntjs.com/) and [grunt-browserify](https://github.com/jmreidy/grunt-browserify)\n\n```javascript\n\nbrowserify: {\n  dist: {\n    files: {\n      'build/bundle.js': 'app/scripts/view.js',\n    },\n    options: {\n      transform: ['mithrilify']\n    }\n  }\n}\n```\n\n\n### Output:\n\n\n```javascript\n/** @jsx m */\n'use strict';\n\nvar View = function (ctrl) {\n  return m(\"div\", [\n      \"hello\"\n    ]);\n};\nmodule.exports = AppView;\n```\n\n## Test\n\nClone project:\n\n```bash\n$ git clone https://github.com/sectore/mithrilify.git && cd $_\n```\n\nInstall dependencies (only once):\n\n```bash\n$ npm install\n```\n\nRun tests:\n\n```bash\n$ gulp test\n```\n\n## Credits:\n\n* [MSX](https://github.com/insin/msx) for supporting JSX to Mithril  \n* [generator-node-gulp](https://github.com/youngmountain/generator-node-gulp) to create a Node.js module with yo, including gulp and Mocha unit tests. \n\n## Release History\n\n[History](./HISTORY.md)\n\n\n\n## License\n\nCopyright (c) 2014 Jens Krause. Licensed under the [MIT license](./LICENSE.md).\n\n\n\n[npm-url]: https://npmjs.org/package/mithrilify\n[npm-image]: https://badge.fury.io/js/mithrilify.svg\n[travis-url]: https://travis-ci.org/sectore/mithrilify\n[travis-image]: https://travis-ci.org/sectore/mithrilify.svg?branch=master\n[daviddm-url]: https://david-dm.org/sectore/mithrilify.svg?theme=shields.io\n[daviddm-image]: https://david-dm.org/sectore/mithrilify\n",
  "readmeFilename": "README.md",
  "_id": "mithrilify@0.0.1",
  "_from": "mithrilify@0.0.1"
}
